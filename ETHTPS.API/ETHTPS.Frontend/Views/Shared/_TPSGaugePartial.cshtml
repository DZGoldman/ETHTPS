<br/>
<div class="container">
    <p id="tps-label" class="underlined" style="font-size:20px;"></p>
</div>
<script>
    $("#tps-label").html(parseFloat(config.CurrentTPS).toFixed(2) + " TPS");
    setInterval(updateTPS, 10000);
    updateTPS();

    function updateTPS() {
        $.get("https://api.ethtps.info/API/GetTPS?Provider=Ethereum&Interval=Instant", function (data) {
            //console.log(data);
            let totalTPS = 0;
            for (var i = 0; i < data.length; i++) {
                totalTPS += data[i].tps;
            }
            $("#tps-label").html(parseFloat(totalTPS).toFixed(2) + " TPS");
            updateTPSTable(data);
            //redrawDoughnut(data);
        });
    }

    function hexToRgb(hex) {
        var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
        return result ? {
            r: parseInt(result[1], 16),
            g: parseInt(result[2], 16),
            b: parseInt(result[3], 16)
        } : null;
    }


    function createData(arr) {
        return {
            labels: arr.map(x => x.provider),
            datasets: [{
                label: 'My First Dataset',
                data: arr.map(x => x.tps),
                backgroundColor: colors.map(x => `rgb(${hexToRgb(x).r}, ${hexToRgb(x).g}, ${hexToRgb(x).b})`).slice(0, arr.length),
                hoverOffset: 4
            }]
        }
    }

    /*
    var doughnut = null;
    function redrawDoughnut(arr) {

        if (doughnut !== null) {
            doughnut.data = createData(arr);
            doughnut.update();
            return;
        }
        var ctx = document.getElementById("doughnut").getContext("2d");


        doughnut = new Chart(ctx, {
            type: 'doughnut',
            data: createData(arr),
            options: {
                responsive: true,
                elements: {
                    point: {
                        radius: 0
                    }
                },
                scales: {
                    yAxes: [{
                        stacked: true,
                    }],
                    xAxes: [{
                        gridLines: {
                            display: false
                        },
                        ticks: {
                            display: false //this will remove only the label
                        }
                    }]
                },
                animation: {
                    duration: 750,
                }
            }
        });
    }
    updateTPS();
    */
</script>

