/**
 * ETHTPS.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HomePageViewModel from '../model/HomePageViewModel';
import ProviderResponseModel from '../model/ProviderResponseModel';
import TPSResponseModel from '../model/TPSResponseModel';
import TPSDataPoint from "../model/TPSDataPoint";

/**
* APIV2 service.
* @module api/APIV2Api
* @version 1.0
*/
export default class APIV2Api {

    /**
    * Constructs a new APIV2Api. 
    * @alias module:api/APIV2Api
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the aPIV2HomePageModelGet operation.
     * @callback module:api/APIV2Api~aPIV2HomePageModelGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HomePageViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.network  (default to 'Mainnet')
     * @param {module:api/APIV2Api~aPIV2HomePageModelGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HomePageViewModel}
     */
    aPIV2HomePageModelGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'network': opts['network']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = HomePageViewModel;
      return this.apiClient.callApi(
        '/API/v2/HomePageModel', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aPIV2InstantTPSGet operation.
     * @callback module:api/APIV2Api~aPIV2InstantTPSGetCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, {String: [TPSDataPoint]}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.includeSidechains  (default to true)
     * @param {module:api/APIV2Api~aPIV2InstantTPSGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, {String: [TPSDataPoint]}>}
     */
    aPIV2InstantTPSGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'includeSidechains': opts['includeSidechains']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = {'String': [TPSDataPoint]};
      return this.apiClient.callApi(
        '/API/v2/InstantTPS', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aPIV2IntervalsGet operation.
     * @callback module:api/APIV2Api~aPIV2IntervalsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<String>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/APIV2Api~aPIV2IntervalsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<String>}
     */
    aPIV2IntervalsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = ['String'];
      return this.apiClient.callApi(
        '/API/v2/Intervals', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aPIV2MaxTPSGet operation.
     * @callback module:api/APIV2Api~aPIV2MaxTPSGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TPSResponseModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.provider 
     * @param {module:api/APIV2Api~aPIV2MaxTPSGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TPSResponseModel>}
     */
    aPIV2MaxTPSGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'provider': opts['provider']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [TPSResponseModel];
      return this.apiClient.callApi(
        '/API/v2/MaxTPS', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aPIV2NetworksGet operation.
     * @callback module:api/APIV2Api~aPIV2NetworksGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<String>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/APIV2Api~aPIV2NetworksGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<String>}
     */
    aPIV2NetworksGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = ['String'];
      return this.apiClient.callApi(
        '/API/v2/Networks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aPIV2ProviderTypesGet operation.
     * @callback module:api/APIV2Api~aPIV2ProviderTypesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<String>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/APIV2Api~aPIV2ProviderTypesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<String>}
     */
    aPIV2ProviderTypesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = ['String'];
      return this.apiClient.callApi(
        '/API/v2/ProviderTypes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aPIV2ProvidersGet operation.
     * @callback module:api/APIV2Api~aPIV2ProvidersGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ProviderResponseModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/APIV2Api~aPIV2ProvidersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ProviderResponseModel>}
     */
    aPIV2ProvidersGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [ProviderResponseModel];
      return this.apiClient.callApi(
        '/API/v2/Providers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aPIV2RecalculateMaxTPSGet operation.
     * @callback module:api/APIV2Api~aPIV2RecalculateMaxTPSGetCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/APIV2Api~aPIV2RecalculateMaxTPSGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    aPIV2RecalculateMaxTPSGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/API/v2/RecalculateMaxTPS', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aPIV2TPSGet operation.
     * @callback module:api/APIV2Api~aPIV2TPSGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TPSResponseModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.provider 
     * @param {String} opts.interval 
     * @param {String} opts.network 
     * @param {Boolean} opts.includeSidechains  (default to true)
     * @param {module:api/APIV2Api~aPIV2TPSGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TPSResponseModel>}
     */
    aPIV2TPSGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'provider': opts['provider'],
        'interval': opts['interval'],
        'network': opts['network'],
        'includeSidechains': opts['includeSidechains']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [TPSResponseModel];
      return this.apiClient.callApi(
        '/API/v2/TPS', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
